services:
  postgres:
    image: postgres:17
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U urlshortener"]
      interval: 5s
      timeout: 5s
      retries: 10

  prisma-migrate:
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
      target: builder
    command: npx prisma migrate deploy
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy

  auth-service:
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
    command: node dist/apps/auth-service/main.js
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      prisma-migrate:
        condition: service_completed_successfully
    ports:
      - "3001:3001"

  url-shortener-service:
    build: 
      context: .
      dockerfile: ./apps/url-shortener-service/Dockerfile
    command: node dist/apps/url-shortener-service/main.js
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      prisma-migrate:
        condition: service_completed_successfully
    ports:
      - "3000:3000"

  krakend:
    image: krakend:2.9
    ports:
      - "8080:8080"
    volumes:
      - ./krakend/krakend.json:/etc/krakend/krakend.json
    depends_on:
      - auth-service
      - url-shortener-service

volumes:
  pgdata: